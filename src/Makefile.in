#
#   bbs100 3.3 WJ107
#   Copyright (C) 1997-2015  Walter de Jong <walter@heiho.net>
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#
#	bbs100 @VERSION@ Makefile	WJ99
#

prefix = @prefix@
bindir = @bindir@
VERSION = @VERSION@

Q = @

CC = @CC@
RM = @RM@
RM_F = $(RM) -f
MV = @MV@
MKDIR = @MKDIR@
PRINTWD = @PRINTWD@
TEST = @TEST@
TOUCH = @TOUCH@
SED = @SED@
TAR = @TAR@
LN = @LN@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL@ -m 0750
INSTALL_SCRIPT = @INSTALL@ -m 0750
INSTALL_DATA = @INSTALL@ -m 0640

CFLAGS = @CFLAGS@
LFLAGS = @LDFLAGS@
LIBCRYPT = @LIBCRYPT@
LIBXNET = @LIBXNET@
LIBSOCKET = @LIBSOCKET@

INCLUDE = include

.c.o:
	@echo '  CC       ' $@
	$(Q)$(CC) -I$(INCLUDE) $(CFLAGS) -c $<

OBJS = List.o PList.o Hash.o Queue.o StringList.o CallStack.o \
	debug.o cstring.o cstrcpy.o bufprintf.o cstrerror.o log.o inet.o \
	crc32.o screens.o edit.o edit_param.o util.o make_dir.o access.o copyright.o \
	User.o OnlineUser.o Wrapper.o Process.o CachedFile.o AtomicFile.o \
	Signals.o SignalVector.o Timer.o timeout.o Feeling.o helper.o \
	state.o state_room.o state_login.o state_msg.o state_friendlist.o \
	state_config.o state_roomconfig.o state_sysop.o state_history.o \
	state_help.o passwd.o Message.o Room.o Joined.o Stats.o BufferedMsg.o \
	SU_Passwd.o Param.o Types.o Memory.o SymbolTable.o HostMap.o \
	FileFormat.o Timezone.o Worldclock.o locale_system.o locales.o \
	Category.o Conn.o ConnUser.o ConnResolv.o Telnet.o NewUserLog.o \
	KVPair.o StringIO.o Display.o patchlist.o Slub.o DirList.o \
	coredump.o \
	main.o

MORE_OBJS = mkpasswd.o resolver.o guard.o ccat.o bbs100_convert.o

CFILES = $(OBJS:.o=.c) $(MORE_OBJS:.o=.c)

TARGETS = bbs100_convert ccat mkpasswd resolver main guard
SCRIPTS = expire_accounts.sh bbs

all: .depend $(TARGETS)

include .depend

#
#   Targets
#

neat:
	@echo '  NEAT'
	$(Q)$(RM_F) ../core core *~

clean:
	@echo '  CLEAN'
	$(Q)$(RM_F) core ../core $(TARGETS) $(OBJS) $(MORE_OBJS) *~ symtab

mrproper: clean
	@echo '  MRPROPER'
	$(Q)$(RM_F) .depend config.status config.cache config.log
	$(Q)$(TOUCH) .depend

depend dep .depend:
	@echo '  DEP       .depend'
	$(Q)$(CC) -I$(INCLUDE) -M $(CFILES) > .depend

cleanlog:
	@echo '  CLEANLOG'
	$(Q)$(RM_F) $(prefix)/log/*/*


main: $(OBJS)
	@echo '  BUILD     main'
	$(Q)$(CC) $(OBJS) -o main $(LFLAGS) $(LIBCRYPT) $(LIBXNET) $(LIBSOCKET)

guard: guard.o
	@echo '  BUILD     guard'
	$(Q)$(CC) -I$(INCLUDE) $(CFLAGS) guard.o -o guard $(LFLAGS)

mkpasswd: mkpasswd.o passwd.o bufprintf.o cstrcpy.o copyright.o
	@echo '  BUILD     mkpasswd'
	$(Q)$(CC) -I$(INCLUDE) $(CFLAGS) mkpasswd.o passwd.o bufprintf.o cstrcpy.o copyright.o -o mkpasswd $(LFLAGS) $(LIBCRYPT)

resolver: resolver.o bufprintf.o cstrcpy.o cstrerror.o copyright.o
	@echo '  BUILD     resolver'
	$(Q)$(CC) -I$(INCLUDE) $(CFLAGS) resolver.o bufprintf.o cstrcpy.o cstrerror.o copyright.o -o resolver $(LFLAGS) $(LIBXNET) $(LIBSOCKET)

ccat: ccat.o bufprintf.o cstrcpy.o copyright.o
	@echo '  BUILD     ccat'
	$(Q)$(CC) -I$(INCLUDE) $(CFLAGS) ccat.o bufprintf.o cstrcpy.o copyright.o -o ccat $(LFLAGS)

bbs100_convert: bbs100_convert.o bufprintf.o cstrcpy.o copyright.o
	@echo '  BUILD     bbs100_convert'
	$(Q)$(CC) -I$(INCLUDE) $(CFLAGS) bbs100_convert.o bufprintf.o cstrcpy.o copyright.o -o bbs100_convert $(LFLAGS)

install: $(TARGETS) $(SCRIPTS)
	@echo "*** installing bbs100-$(VERSION) to $(prefix)/"
	@umask 027
	@if $(TEST) ! -d $(bindir)-$(VERSION) ; \
	then \
		echo "  MKDIR     $(bindir)-$(VERSION)/" ; \
		$(MKDIR) -p $(bindir)-$(VERSION) ; \
	fi
	@for i in $(TARGETS) ; \
	do \
		echo "  INSTALL   $$i" ; \
		$(INSTALL_PROGRAM) $$i $(bindir)-$(VERSION) ; \
	done
	@for i in $(SCRIPTS) ; \
	do \
		echo "  INSTALL   $$i" ; \
		$(INSTALL_SCRIPT) $$i $(bindir)-$(VERSION) ; \
	done
	@$(RM_F) $(bindir)
	@$(LN) -s $(bindir)-$(VERSION) $(bindir)
	@if $(TEST) ! -d $(prefix)/users -o ! -d $(prefix)/rooms ; \
	then \
		echo ' ' ; \
		echo '*** this looks like a first-time installation' ; \
		echo '*** initializing bbs100 directory structure' ; \
		echo ' ' ; \
		umask 027 ; \
		if $(TEST) -f ./state_msg.c ; \
		then \
			cd .. ; \
			CURRDIR=`$(PRINTWD)` ; \
			echo "  COPYDIR   $(prefix)/etc/" ; \
			echo "  COPYDIR   $(prefix)/rooms/" ; \
			$(TAR) -cf - etc rooms | ( cd $(prefix) ; \
				$(TAR) -xf - ; \
				$(SED) "/basedir/ s?xxx?$(prefix)?" $(prefix)/etc/param >$(prefix)/etc/param1 ; \
				$(MV) $(prefix)/etc/param1 $(prefix)/etc/param ; \
			) ; \
			for DIR in log rooms users trash log/archive log/crash trash/rooms trash/users ; \
			do \
				if $(TEST) ! -d "$(prefix)/$${DIR}" ; \
				then \
					echo "  MKDIR     $(prefix)/$${DIR}/" ; \
					$(MKDIR) "$(prefix)/$${DIR}/" ; \
				fi ; \
			done ; \
			for DIR in A B C D E F G H I J K L M N O P Q R S T U V W X Y Z ; \
			do \
				if $(TEST) ! -d "$(prefix)/trash/users/$${DIR}" ; \
				then \
					$(MKDIR) "$(prefix)/trash/users/$${DIR}" ; \
				fi ; \
				if $(TEST) ! -d "$(prefix)/users/$${DIR}" ; \
				then \
					$(MKDIR) "$(prefix)/users/$${DIR}" ; \
				fi ; \
			done ; \
			echo ' ' ; \
			echo '*** setup done' ; \
			echo "*** You can now do '$(bindir)/bbs start' to start it up" ; \
			echo ' ' ; \
		else \
			echo ' ' ; \
			echo '*** the current directory is not the src directory' ; \
			echo '*** unable to initialize the bbs100 directory structure' ; \
			echo ' ' ; \
		fi ; \
	else \
		echo "  COPYDIR   $(prefix)/etc/help/" ; \
		( cd ../etc && $(TAR) -cf - help ) | ( cd $(prefix)/etc && $(TAR) -xf - ) ; \
	fi
	@if $(TEST) -f symtab ; \
	then \
		$(INSTALL_DATA) symtab $(prefix)/etc/symtab ; \
	fi


uninstall:
	@echo "*** uninstall bbs100-$(VERSION) from $(bindir)/"
	@( cd $(bindir) ; $(RM_F) $(TARGETS) $(SCRIPTS) )


test: install
	@(	$(bindir)/bbs stop ; \
		$(bindir)/bbs start ; \
		sleep 4 ; \
		telnet localhost 1234 ; \
		exit 0 ; \
	)

# EOB
