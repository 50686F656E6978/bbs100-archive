#! @PERL@
#
#   bbs100 1.2.0 WJ102
#   Copyright (C) 2002  Walter de Jong <walter@heiho.net>
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#! @PERL@
#
#	bbs100 1.2.0 stats.pl	WJ99
#
#	Extract statistics from logs
#

print "bbs100 1.2.0 stats.pl by Walter de Jong (walter\@heiho.net) (c) 1999\n";

@auth_files = `/bin/ls log/auth/auth.??`;

foreach $file (@auth_files) {
	chop($file);

	if (open(AUTH, "<$file")) {
		while($line = <AUTH>) {
			chop($line);

			@arr = split(/ /, $line);
			if (($arr[2] eq 'CONN') && ($arr[3] =~ /\((\S+)\)/)) {
				$conn{$1}++;
			} elsif ($arr[2] eq 'LOGIN') {
				$name = $arr[3];
				for($i = 4; $i < 100; $i++) {
					if ($arr[$i] =~ /\(\S+\)/) {
						last;
					}
					$name = $name . ' ' . $arr[$i];
				}
				$users{$name}++;
			} elsif ($arr[2] eq 'NEWUSER') {
				$name = $arr[3];
				for($i = 4; $i < 100; $i++) {
					if ($arr[$i] =~ /\(\S+\)/) {
						last;
					}
					$name = $name . ' ' . $arr[$i];
				}
				push @newusers, $name;
			}
		}
		close(AUTH);
	}
}


# print summary

print "Connections from sites this month\n", "-" x 79, "\n";
$total = 0;
@arr = keys(%conn);
foreach $elem (@arr) {
	printf("%-16s : $conn{$elem}\n", $elem);
	$total += $conn{$elem};
}
if ($total == 0) { $total = 1; }
printf("\n%-16s : $total connections from %d different sites\n", "total", $#arr + 1);

print "\nLogins by users this month\n", "-" x 79, "\n";
$total = 0;
@arr = keys(%users);
foreach $elem (@arr) {
	printf("%-16s : $users{$elem}\n", $elem);
	$total += $users{$elem};
}
if ($total == 0) { $total = 1; }
printf("\n%-16s : $total logins by %d different users\n", "total", $#arr + 1);

print "\nNew users this month\n", "-" x 79, "\n";
$total = 0;
$i = 0;
foreach $elem (@newusers) {
	printf("%-18s  ", "$elem");
	$total++;
	$i++;
	if ($i >= 4) {
		$i = 0;
		print "\n";
	}
}
if ($i != 0) {
	print "\n";
}
printf("\n%-16s : $total\n", "total");

# EOB
