bbs100 by Walter de Jong <walter@heiho.net> (C) 1997-2015

bbs100 COMES WITH NO WARRANTY. bbs100 IS FREE SOFTWARE.     
bbs100 is distributed under terms described in the GNU General Public License.

You should READ THE LICENSE before proceeding.

To install, untar the package and run configure from the src directory.
Give the installation base directory as prefix to configure.

If you are upgrading, read the UPGRADING file.

I suggest you use /home/bbs as base directory. You may use another
directory as well (such as /usr/local/bbs), but I prefer /home/bbs as
base directory. /usr/local is strongly discouraged, because the BBS needs
write access to certain directories and you usually don't do that on
/usr/local. The BBS directories should not be world-readable, so the
Makefile uses the umask of 027.

	$ cd src
	$ ./configure --prefix=/home/bbs

Note: Do not use a relative path as prefix;
      DON'T DO ./configure --prefix=..
because it will cause problems in the generated scripts.


After configuring, a Makefile should have been created (amongst some
other files). Now make the package.

	$ make dep ; make

Some 'make' programs complain about the .depend file, if this is the
case then just do a 'touch .depend' before trying to make dep.
Some compilers don't understand what dependencies are and remake
everything once more when you do another 'make' :P
Doing a 'make install' will install the binaries in /home/bbs/bin/.
If 'make' fails, you have problems and you can ask me, but you will
probably be more successful sorting it out by yourself.

If you wish to reconfigure, do a 'make mrproper' before running
configure again.

If you are setting up bbs100 for the very first time, the make should
detect this and setup the necessary directory structure automatically.

Mind that when you are upgrading, 'make install' only installs new binaries
and scripts under /home/bbs/bin (or whatever you have configured), but that
new versions may come with new files under etc/ and new parameters in
etc/param as well.
YOU WILL HAVE TO CHECK THIS YOURSELF WHEN UPGRADING (and please excuse me
for using caps).
You can find all important recent changes in the ChangeLog file.

Note that if you use 'sudo make install', files will be owned by root.
If you run bbs100 under a 'bbs' user, with /home/bbs as homedir, you will
have to chown the files yourself. Like so:

    $ sudo chown -R bbs.bbs /home/bbs



The rest of the INSTALL is for users that have never before run bbs100.

Before starting the BBS, edit the file '/home/bbs/etc/param'. This file
contains the configuration of the BBS. Never mind all the options for now,
but verify that 'basedir' in the top of the param file is set to the full
path where the BBS resides.
In our case, 'basedir' should be set to '/home/bbs/'.

Now you can start the BBS:

    cd /home/bbs ; bin/bbs start

Then you can log in by telnetting to localhost port 1234. bbs100 runs at
port 1234 by default. To reconfigure the port number of the BBS, edit the
param file etc/param  and change the value of port_number.

The BBS can run at port 23 (the default telnet port at which login runs),
but it needs to run with root privs in this configuration, which is not
a wise thing to do.
If you wish to make the BBS accessible from port 23 anyway, I recommend
running a port redirector at port 23, and have it redirect to port 1234,
where the BBS runs under a non-privileged account.

It is highly recommended you create a UNIX user login 'bbs' under which the
BBS can run, preferably in the UNIX group 'bbs'. You need to have
root privileges to create the login and group.
Verify that all files under /home/bbs are owned by bbs.bbs and that they
are not accessible by others (ie. permission bits rw-rw----).

If you haven't done so yet, start the BBS by running '/home/bbs/bin/bbs start'
When you telnet to the BBS and login, you will find you are a normal user
on bbs100. To gain sysop access, you must shut the BBS down and give
yourself Sysop permissions. This is done as follows:

- kill the BBS; run `bin/bbs stop`
- run bin/mkpasswd and enter your super-user passphrase
  mkpasswd will echo a crypto text back to the screen
- edit etc/su_passwd and add a line for yourself in the form
    <username>:<encrypted passphrase>

  e.g. Walter:AiurmDttiYdjdkkW

- start the BBS; run 'bin/bbs start'
- use telnet to connect and login using your login name and password
- on the room prompt, press the dollar sign '$' for Super User mode
- enter the passphrase you entered into mkpasswd

You are now in Super User mode. This enables you to see some extra fields
in the user profile (such as IP address), extra options in the Room Config
menu (press Ctrl-R), and grants you access to the Sysop menu (press Ctrl-S).

As an exercise, press Ctrl-S to enter the Sysop menu. Now press Ctrl-P
to enter the Parameters submenu. Via this menu you can control various
parameters in the BBS that are kept in the etc/param file.
Now press 'y' to alter the system parameters and then press 'n'.
You may choose a new name for your BBS. You can exit the menus by hitting
space or return and verify the BBS name is correct by pressing Shift-S
on the room prompt.

Exploring the rest of bbs100's capabilities is left as an exercise to
the reader.


You can add as many sysops as you like, but note that it can be done only
by a BBS administrator by editing the etc/su_passwd file. Sysops cannot be
added to or removed from a live running BBS (this is considered a security
feature).

After installing, you can start creating rooms, customizing the login
screen, adding feelings, etc. before going open for general use.
You should also read the README for more instructions.


Enjoy,

    --Walter <walter@heiho.net>

PS. Please do me a favour and keep the user name 'Walter' reserved for me.

EOB
